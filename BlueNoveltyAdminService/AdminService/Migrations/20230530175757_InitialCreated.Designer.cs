// <auto-generated />
using System;
using AdminService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AdminService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230530175757_InitialCreated")]
    partial class InitialCreated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AdminService.Models.Service", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Instructions")
                        .HasColumnType("text");

                    b.Property<string>("OfferedRates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrefferedDates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ServiceType")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.HasKey("Guid");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("AdminService.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("BlueNoveltyAdminService.Models.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MainSkillId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrefferedLanguage")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("Guid");

                    b.HasIndex("MainSkillId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ServiceSkill", b =>
                {
                    b.Property<Guid>("ServicesGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("SkillsId")
                        .HasColumnType("integer");

                    b.HasKey("ServicesGuid", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ServiceSkill");
                });

            modelBuilder.Entity("SkillUser", b =>
                {
                    b.Property<int>("SkillsId")
                        .HasColumnType("integer");

                    b.Property<Guid>("UsersGuid")
                        .HasColumnType("uuid");

                    b.HasKey("SkillsId", "UsersGuid");

                    b.HasIndex("UsersGuid");

                    b.ToTable("SkillUser");
                });

            modelBuilder.Entity("BlueNoveltyAdminService.Models.User", b =>
                {
                    b.HasOne("AdminService.Models.Skill", "MainSkill")
                        .WithMany("User")
                        .HasForeignKey("MainSkillId");

                    b.Navigation("MainSkill");
                });

            modelBuilder.Entity("ServiceSkill", b =>
                {
                    b.HasOne("AdminService.Models.Service", null)
                        .WithMany()
                        .HasForeignKey("ServicesGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminService.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillUser", b =>
                {
                    b.HasOne("AdminService.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlueNoveltyAdminService.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdminService.Models.Skill", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
