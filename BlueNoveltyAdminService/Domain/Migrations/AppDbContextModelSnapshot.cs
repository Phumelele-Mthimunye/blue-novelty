// <auto-generated />
using System;
using Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Domain.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Entities.CleaningRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateOnly?>("DateOfRequest")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("dateOfRequest");

                    b.Property<Guid?>("HouseholdDetailId")
                        .IsRequired()
                        .HasColumnType("uuid")
                        .HasColumnName("householdDetail_Id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalPrice")
                        .IsRequired()
                        .HasColumnType("numeric")
                        .HasColumnName("totalPrice");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_Id");

                    b.Property<Guid?>("userId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdDetailId");

                    b.HasIndex("userId");

                    b.ToTable("CleaningRequests");
                });

            modelBuilder.Entity("Domain.Models.Entities.HouseholdCleaningPricing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("room");

                    b.Property<string>("RoomServiceDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("roomServiceDescription");

                    b.HasKey("Id");

                    b.ToTable("HouseholdCleaningPricings");
                });

            modelBuilder.Entity("Domain.Models.Entities.HouseholdDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<int>("NumberOfAdditionalRooms")
                        .HasColumnType("integer")
                        .HasColumnName("numberOfAdditionalRooms");

                    b.Property<int>("NumberOfBathrooms")
                        .HasColumnType("integer")
                        .HasColumnName("numberOfBathrooms");

                    b.Property<int>("NumberOfBedrooms")
                        .HasColumnType("integer")
                        .HasColumnName("numberOfBedrooms");

                    b.HasKey("Id");

                    b.ToTable("HouseholdDetails");
                });

            modelBuilder.Entity("Domain.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("LastName");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("PrefferedLanguage")
                        .HasColumnType("text")
                        .HasColumnName("PrefferedLanguage");

                    b.Property<int>("UserType")
                        .HasColumnType("integer")
                        .HasColumnName("UserType");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.Entities.CleaningRequest", b =>
                {
                    b.HasOne("Domain.Models.Entities.HouseholdDetail", "HouseholdDetail")
                        .WithMany("CleaningRequests")
                        .HasForeignKey("HouseholdDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Entities.User", "User")
                        .WithMany("CleaningRequests")
                        .HasForeignKey("userId");

                    b.Navigation("HouseholdDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Entities.HouseholdDetail", b =>
                {
                    b.Navigation("CleaningRequests");
                });

            modelBuilder.Entity("Domain.Models.Entities.User", b =>
                {
                    b.Navigation("CleaningRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
